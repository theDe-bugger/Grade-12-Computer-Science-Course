/**
 * This is a program which uses linear search and binary search to find books from a text file based on reference numbers.
 * 
 * date         20201022
 * @filename	BookList.java
 * @author      jdalwadi
 * @version     1.0
 * @see         assignment 3.3
 */




import java.awt.List;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jaimil.d
 */
public class BookList extends javax.swing.JFrame {
    
    // given code to read text from BookList.txt;
    ArrayList <String> inputList = new ArrayList<>();
    BufferedReader br = null;
  
    public String[][] libraryInput(){
        try {
            br = new BufferedReader(new FileReader("./List.txt"));
            String word;
            while ((word = br.readLine()) != null ){
                inputList.add(word);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                br.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
    }
        
    // 2 dimensional array to store reference numbers and book names in an organized manner
    String[][] libraryList = new String[inputList.size()][2];
    int count = 0;
    for (int i = 0; i <inputList.size();i+=2){
        if(i%2 == 0){
            libraryList[count][0] = inputList.get(i);
            libraryList[count][1] = inputList.get(i+1);
            count++;
        } else{
            libraryList = libraryList;
        }
    }
    return libraryList;
    }
    String[][] List = libraryInput();
    
    // linear search method
    public static String linearSearch (String [][] List, String reference){
        for (int row = 0; row < List.length; row++){
            if (List[row][0].equals(reference)){
                return "This book was found using linear search.\n Name: " + List[row][1] + ".\n Reference: " + List[row][0];
            }
        }
        
        // precondition if no match is found
        return "Please enter a valid reference number. This book was not found.";
    }
    
    // binary search method
    public static String binarySearch (String [][] List, int left, int right, String reference){
        int middle;
        
        // precondition if no match is found
        if (left > right){
            return "Please enter a valid reference number. This book was not found.";
        } 
        middle = (left + right)/2;
        if (reference.equals(List[middle][0])){
            return "This book was found using binary search.\n Name: " + List[middle][1] + ".\n Reference: " + List[middle][0];
        } else if (Integer.parseInt(reference) < Integer.parseInt(List[middle][0])) { 
            return binarySearch(List, left, middle-1, reference);
        } else{
            return binarySearch(List, middle+1, right, reference);
        }
        
    }
    /**
     * Creates new form BookList
     */
    public BookList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLinearOutput = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBinaryOutput = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Children's Classics");

        jLabel2.setText("This program will find the title of a book according to a library");

        jLabel3.setText("reference number. It will use linear and binary search");

        jLabel4.setText("Please enter reference number:");

        txtInput.setColumns(5);

        btnFind.setText("Find It");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        jLabel5.setText("Linear Search:");

        jLabel6.setText("Binary Search:");

        txtLinearOutput.setEditable(false);
        txtLinearOutput.setColumns(25);
        txtLinearOutput.setRows(3);
        jScrollPane2.setViewportView(txtLinearOutput);

        txtBinaryOutput.setEditable(false);
        txtBinaryOutput.setColumns(25);
        txtBinaryOutput.setRows(3);
        jScrollPane3.setViewportView(txtBinaryOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btnFind)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        try{
            int input = Integer.parseInt(txtInput.getText());
            txtLinearOutput.setText(linearSearch(List, String.valueOf(input)));
            txtBinaryOutput.setText(binarySearch(List,0,List.length-1,String.valueOf(input)));
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Please enter a valid reference number. This book was not found.");
            txtInput.setText("");
            txtLinearOutput.setText("");
            txtBinaryOutput.setText("");
        }
    }//GEN-LAST:event_btnFindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea txtBinaryOutput;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextArea txtLinearOutput;
    // End of variables declaration//GEN-END:variables
}
