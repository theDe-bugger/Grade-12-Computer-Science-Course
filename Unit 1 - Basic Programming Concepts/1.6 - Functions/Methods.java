
/**
 * This application takes in different inputs, and applies various math methods to each one and outputs a solution.
 * To run this program, simply type a number in any field you wish, and click 
 * on the button to its right to perform the conversion or calculation to it.
 * Once the calculation is complete, the input TextArea's text will be set to the output.
 * This application only allows for Integers or Doubles.
 * Decimal Format code found online: https://javarevisited.blogspot.com/2012/03/how-to-format-decimal-number-in-java.html#:~:text=In%20order%20to%20format%20a,number%20into%20a%20needed%20format.
 * 
 * date         20200930
 * modified     20201009
 * @filename	Methods.java
 * @author      jdalwadi
 * @version     1.1
 */


// used to format decimals (doubles) to two decimal places
import java.text.DecimalFormat;

// used to popup a message if there is an error
import javax.swing.JOptionPane;

public class Methods extends javax.swing.JFrame {

    /**
     * Creates new form Methods
     */
    public Methods() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        txtfarC = new javax.swing.JTextField();
        txtcelF = new javax.swing.JTextField();
        txtdegR = new javax.swing.JTextField();
        txtradD = new javax.swing.JTextField();
        txtroundUp = new javax.swing.JTextField();
        farC = new javax.swing.JButton();
        celF = new javax.swing.JButton();
        radD = new javax.swing.JButton();
        degR = new javax.swing.JButton();
        roundUp = new javax.swing.JButton();
        roundDown = new javax.swing.JButton();
        txtroundDown = new javax.swing.JTextField();
        squareRoot = new javax.swing.JButton();
        txtsquareRoot = new javax.swing.JTextField();
        cubeRoot = new javax.swing.JButton();
        txtcubeRoot = new javax.swing.JTextField();
        ofarC = new javax.swing.JTextField();
        odegR = new javax.swing.JTextField();
        oroundUp = new javax.swing.JTextField();
        osquareRoot = new javax.swing.JTextField();
        ocelF = new javax.swing.JTextField();
        oradD = new javax.swing.JTextField();
        oroundDown = new javax.swing.JTextField();
        ocubeRoot = new javax.swing.JTextField();
        lblInputs = new javax.swing.JLabel();
        lblOutputs = new javax.swing.JLabel();
        lblOperations = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setText("Converter and Calculator");

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        txtfarC.setColumns(8);

        txtcelF.setColumns(8);

        txtdegR.setColumns(8);
        txtdegR.setToolTipText("");

        txtradD.setColumns(8);

        txtroundUp.setColumns(8);

        farC.setText("Fahrenheit -> Celsius");
        farC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                farCActionPerformed(evt);
            }
        });

        celF.setText("Celsius -> Fahrenheit");
        celF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celFActionPerformed(evt);
            }
        });

        radD.setText("Radians -> Degrees");
        radD.setToolTipText("");
        radD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDActionPerformed(evt);
            }
        });

        degR.setText("Degrees -> Radians");
        degR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degRActionPerformed(evt);
            }
        });

        roundUp.setText("Round Up (to whole number)");
        roundUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundUpActionPerformed(evt);
            }
        });

        roundDown.setText("Round Down (to whole number)");
        roundDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundDownActionPerformed(evt);
            }
        });

        txtroundDown.setColumns(8);

        squareRoot.setText("Square Root");
        squareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareRootActionPerformed(evt);
            }
        });

        txtsquareRoot.setColumns(8);

        cubeRoot.setText("Cube Root");
        cubeRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cubeRootActionPerformed(evt);
            }
        });

        txtcubeRoot.setColumns(8);

        ofarC.setEditable(false);
        ofarC.setColumns(8);

        odegR.setEditable(false);
        odegR.setColumns(8);
        odegR.setToolTipText("");

        oroundUp.setEditable(false);
        oroundUp.setColumns(8);

        osquareRoot.setEditable(false);
        osquareRoot.setColumns(8);

        ocelF.setEditable(false);
        ocelF.setColumns(8);

        oradD.setEditable(false);
        oradD.setColumns(8);

        oroundDown.setEditable(false);
        oroundDown.setColumns(8);

        ocubeRoot.setEditable(false);
        ocubeRoot.setColumns(8);

        lblInputs.setText("Inputs");

        lblOutputs.setText("Outputs");

        lblOperations.setText("Operations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtradD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtsquareRoot, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtroundUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtroundDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)))
                    .addComponent(txtfarC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdegR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcelF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcubeRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(farC)
                    .addComponent(celF)
                    .addComponent(squareRoot)
                    .addComponent(cubeRoot)
                    .addComponent(degR)
                    .addComponent(radD)
                    .addComponent(roundDown)
                    .addComponent(roundUp)
                    .addComponent(jLabel1)
                    .addComponent(lblOperations))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oroundDown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(osquareRoot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oradD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(odegR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oroundUp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ocelF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ocubeRoot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ofarC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(reset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblInputs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblOutputs)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInputs)
                    .addComponent(lblOutputs)
                    .addComponent(lblOperations))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfarC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(farC)
                    .addComponent(ofarC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcelF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(celF)
                        .addComponent(ocelF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(squareRoot)
                    .addComponent(osquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cubeRoot)
                    .addComponent(txtcubeRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ocubeRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(degR)
                    .addComponent(txtdegR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(odegR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtradD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radD)
                        .addComponent(oradD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roundDown)
                    .addComponent(txtroundDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oroundDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roundUp)
                    .addComponent(txtroundUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oroundUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset)
                    .addComponent(exit))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /*
    Custom Method #1 - No Return Value
    This method is called after every calculate button is pressed to check for errors.
    Removes the need for multiple try catch additions.
    */
    public static void check(String txt){
        try {
            // tries to parse an integer from a given string
            Double.parseDouble(txt); 
        } catch (Exception e){
            // displays message if input is not an integer
            JOptionPane.showMessageDialog(null, "Please enter only a number.\nPlease press the Reset button now.");
        }
    }
    
    /*
    This static method simply creates a new decimal format which can be used to format output later on
    */
    public static DecimalFormat df = new DecimalFormat("0.00");
    
    /*
    Custom Method #2 - Return Value
    Takes in fahrenheit input and returns celsius conversion under same variable name
    */
    public static double fahrenheitcelsius(double fahrenheit){
        fahrenheit = ((fahrenheit-32) * (5.0/9.0)); 
        return(double) fahrenheit;
    }
    
    /*
    Custom Method #3 - Return Value
    Takes in celsius input and returns fahrenheit conversion under same variable name
    */
    public static double celsiusfahrenheit(double celsius){
        celsius = (celsius * (9.0/5.0)) + 32;
        return(double) celsius;
    }
    
    /*
    Custom Method #4 - No Return Value
    Resets all input text areas to blank
    */
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        txtfarC.setText("");
        txtcelF.setText("");
        txtdegR.setText("");
        txtradD.setText("");
        txtroundUp.setText("");
        txtroundDown.setText("");
        txtsquareRoot.setText("");
        txtcubeRoot.setText("");
        //variable names with o in front are outputs
        ofarC.setText("");
        ocelF.setText("");
        odegR.setText("");
        oradD.setText("");
        oroundUp.setText("");
        oroundDown.setText("");
        osquareRoot.setText("");
        ocubeRoot.setText("");
    }//GEN-LAST:event_resetActionPerformed

    /*
    Uses built-in Math Method #1 (toRadians)
    Sets input text area to output
    */
    private void degRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degRActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtdegR.getText());
        
        // gets input
        double degrees = Double.parseDouble(txtdegR.getText());
        
        // uses math method to perform calculation/conversion
        degrees = Math.toRadians(degrees);
        
        // sets output text and formats to two decimal points
        odegR.setText(String.valueOf(df.format(degrees)));
    }//GEN-LAST:event_degRActionPerformed

    /*
    Uses custom method #2 (fahrenheitcelsius) and converts from fahrenheit to celsius
    Sets input text area to output
    */
    private void farCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_farCActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtfarC.getText());
        
        // gets input
        double fahrenheit = Double.parseDouble(txtfarC.getText());
        
        // uses custom method to perform calculation/conversion
        fahrenheit = fahrenheitcelsius(fahrenheit);
        
        // sets output text and formats decimals to two places
        ofarC.setText(String.valueOf(df.format(fahrenheit)));
    }//GEN-LAST:event_farCActionPerformed
    
    /*
    Uses custom method #3 (celsiusfahrenheit) and converts from celsius to fahrenheit
    Sets input text area to output
    */
    private void celFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celFActionPerformed
        // TODO add your handling code here:
        
        // checks for exceptions
        check(txtcelF.getText());      
        
        // gets input
        double celsius = Double.parseDouble(txtcelF.getText());
        
        // uses custom method to perform calculation/conversion
        celsius = celsiusfahrenheit(celsius);
        
        // sets output text and formats decimals to two places
        ocelF.setText(String.valueOf(df.format(celsius)));
    }//GEN-LAST:event_celFActionPerformed

    /*
    Uses built-in Math Method #2 (toDegrees)
    Sets input text area to output
    */    
    private void radDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDActionPerformed
        // TODO add your handling code here:
        
        // checks for exceptions
        check(txtradD.getText());       
        
        // gets input
        double radians = Double.parseDouble(txtradD.getText());
        
        // uses built in math method to perform calculation/conversion
        radians = Math.toDegrees(radians);
        
        // sets output text and formats to two decimal places
        oradD.setText(String.valueOf(df.format(radians)));
    }//GEN-LAST:event_radDActionPerformed

    /*
    Uses built-in Math Method #3 (ceil) to round up
    Sets input text area to output
    */
    private void roundUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundUpActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtroundUp.getText());
        
        // gets input
        double rUp = Double.parseDouble(txtroundUp.getText());
        
        // uses built in math method to round up
        rUp = Math.ceil(rUp);
        
        // sets output text and formats decimals to two places
        oroundUp.setText(String.valueOf(df.format(rUp)));
    }//GEN-LAST:event_roundUpActionPerformed

    /*
    Uses built-in Math Method #4 (floor) to round down
    Sets input text area to output
    */
    private void roundDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundDownActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtroundDown.getText());
        
        // gets input
        double rDown = Double.parseDouble(txtroundDown.getText());
        
        // uses built in math method to round down
        rDown = Math.floor(rDown);
        
        // sets output text and formats decimals to two places
        oroundDown.setText(String.valueOf(df.format(rDown)));
    }//GEN-LAST:event_roundDownActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);// EXITS APPLICATION
    }//GEN-LAST:event_exitActionPerformed

    /*
    Uses built-in Math Method #5 (sqroot)
    Sets input text area to output
    */
    private void squareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareRootActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtsquareRoot.getText());
        
        // gets input
        double sqroot = Double.parseDouble(txtsquareRoot.getText());
        
        // uses built in math method to find square root
        sqroot = Math.sqrt(sqroot);
        
        // sets output text and formats decimals to two places
        osquareRoot.setText(String.valueOf(df.format(sqroot)));
    }//GEN-LAST:event_squareRootActionPerformed

    /*
    Uses built-in Math Method #6 (cbroot)
    Sets input text area to output
    */
    private void cubeRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cubeRootActionPerformed
        // TODO add your handling code here:
        // checks for exceptions
        check(txtcubeRoot.getText());
        
        // gets input
        double cbroot = Double.parseDouble(txtcubeRoot.getText());
        
        // uses built in math method to find cube root
        cbroot = Math.cbrt(cbroot);
        
        // sets output text and formats decimals to two places
        ocubeRoot.setText(String.valueOf(df.format(cbroot)));
    }//GEN-LAST:event_cubeRootActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Methods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Methods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Methods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Methods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Methods().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton celF;
    private javax.swing.JButton cubeRoot;
    private javax.swing.JButton degR;
    private javax.swing.JButton exit;
    private javax.swing.JButton farC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel lblInputs;
    private javax.swing.JLabel lblOperations;
    private javax.swing.JLabel lblOutputs;
    private javax.swing.JTextField ocelF;
    private javax.swing.JTextField ocubeRoot;
    private javax.swing.JTextField odegR;
    private javax.swing.JTextField ofarC;
    private javax.swing.JTextField oradD;
    private javax.swing.JTextField oroundDown;
    private javax.swing.JTextField oroundUp;
    private javax.swing.JTextField osquareRoot;
    private javax.swing.JButton radD;
    private javax.swing.JButton reset;
    private javax.swing.JButton roundDown;
    private javax.swing.JButton roundUp;
    private javax.swing.JButton squareRoot;
    private javax.swing.JTextField txtcelF;
    private javax.swing.JTextField txtcubeRoot;
    private javax.swing.JTextField txtdegR;
    private javax.swing.JTextField txtfarC;
    private javax.swing.JTextField txtradD;
    private javax.swing.JTextField txtroundDown;
    private javax.swing.JTextField txtroundUp;
    private javax.swing.JTextField txtsquareRoot;
    // End of variables declaration//GEN-END:variables
}
